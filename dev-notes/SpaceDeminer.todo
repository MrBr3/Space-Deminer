Space-Deminer:
[X] Mausinteraktion
  [X] Events mask
[X] MainMenu wieder zum laufen bringen
[X] Testen, wie on_mouse_move sich verhält, wenn das widget mit event plötzlich verschwindet
  [X] Mausbewegung
  [X] Maustaste runter
  [X] Mausbewegung mit Maustaste runter
  [X] Maustaste hoch
[X] Dialog
  [X] MessageBox
[ ] automatische Tests sollten auch im vollbildmodus funzen
[ ] per Tasten navigieren können
  [ ] Fokus
    [ ] Maske anpassen
  [ ] Tab
  [ ] Pfeiltasten
    [ ] wenn unverarbeitet, sollen container semiautomatisch untereinander ausmachen
    [ ] sigc::slot<void> move_when(DIR_RIGHT/DIR_LEFT/... , Widget*) // gibt einen Slot zurück, welches bei entsprechendem Tastendruck den Fokus zum gegebenen Widget wechselt
  [ ] Memnotics
    [X] Draw Memnotics
    [ ] Widget* get_memnotic(unichar memnotic) // liefert das Widget, das gegebene Memnotic erfüllt
    [ ] on_memnotic_pushed
    [ ] on_memnotic_released
[ ] neues UI Design einführen
  [ ] Schriftart mit passender Lizenz in PNG Bild(er) umwandeln?
    [ ] Linux Libertine? (http://de.wikipedia.org/wiki/Linux_Libertine)
  [ ] Extra Hauptmenü Theme
    [ ] HSeparator
    [ ] VSeparator
    [ ] Hintergrund
    [ ] Weichgezeichnete schrift
    [ ] Schriften kombinieren können
    [ ] Bild auf mit Alpha von schrift zeichnen können?
[ ] Ingame
  [ ] Scene
    [ ] Time Variablen hinzufügen
      [ ] Zeitlupe, wenn Spieler nur noch ganz wenig Leben hat
      [ ] Optinal: Zeitlupe bei Finalen schuss + gefährliche Situation
    [ ] Thinkable
      [ ] WeaponType
        [ ] muss auf Scene Zugriff haben
      [ ] Objects2D
        [ ] Decorations
          [ ] anstatt never_show_again nur ObsLinks darauf verweisen und destroy prozedur verwenden?
          [ ] Zeichnen des Raumschiffs selber als Decoration
          [ ] Partikeleffekte
            [ ] Explosionen
            [ ] Schild
            [ ] Antrieb

Base
  [ ] Interoperabilität
    [ ] libsvg auch unter windows nutzen
  [ ] pixbuf->texture an minimales opengl (2.1 oder 3.3?) anpassen:
    [ ] automatische MipMap generierung nutzen
    [ ] Texturen beliebiger größe (nicht mehr 2^n)

PlanetGenerator
  [X] Sphere
    [X] UV-Fehler bei Caps beheben
    [X] decide whether only quads
    [X] decide whether mix of quads and triangles => triangles
  [X] LayerView
    [X] mit einfachen Klick entsprechende Settings anzeigen
    [X] mit Klick auf das Auge zwischen sichtbar/unsichtbar umschalten
  [X] offline rendering
    [X] extra Texturangabe für offline rendering
    [X] Sphere aufteilen, um große Texturen zu erlauben?
      => Nope
    [X] Bildschirm aufteilen, um große ergebnisse zu erlauben?
      => Nope
    [X] Raytracer Anfangen
      [X] Matrix
        [X] Matrix invertieren
          [X] Cofaktoren bestimmenn können
            [X] 3x3 Untermatrix durch auslassen einer Spalte und einer Zeile bestimmen können
            [X] Determinante einer 3x3 Untermatrix bestimmen
            [X] Minoren bestimmen
          [X] Determinante einer 4x4 Matrix bestimmen
          [X] Adjunkte einer 4x4 Matrix bestimmen
      [X] RenderParam
        [X] Inverse Matrizen
        [X] die absolute pixelposition und kehrwerte für breite/höhe (kehrwerte werden für antialiasing benötigt)
      [X] CalcPixelColor sollte anstatt relative pixelposition nur RenderParam als Parameter annehmen
      [X] Mitternachtsformel
      [X] Strahl implementieren
      [X] Kugel implementieren
        [X] mit Mittelpunkt, falls später schatten gewünscht sind.
      [X] Schnitt Strahl-Kugel
      [X] "Shader" für Planet
        [X] pixel innerhalb der kugel mit 100% Blau rendern
      [X] Antialiasing
        [X] no antialiasing
        [X] 2 rays per pixel
        [x] 4 rays per pixel
        [X] 8 rays per pixel
      [X] fix dithering
      [X] Hintergrundfarbe und UV wert entsprechend der Kugel anzeigen
        [X] unkorrigiert
        [X] korrigiert
      [X] mystische Artefakte entfernen
      [X] Strahl und Kugel in Base verschieben
      [X] Ebene implementieren
        [X] Schnitt Strahl-Ebene
      [X] Ringe
      [X] Performance Steigerung mit Frustrumculling pro Kachel
        [X] genauer erfassen
          [X] CullingSphere
          [X] Ring
            [X] Debugrendering als parameter, ob welt, relative oder absolute Bildschirmkoordinaten
            [X] culling
            [X] gut testen
          [X] Sphere: die richtige scheinbaren Radius ermitteln
        [X] debugging bilder ein/ausschalten können
      [X] komisches Artefakt finden und fixen
      [X] Culling bug: falscher 2D radius, wenn Kugel über oberen Rand hinausragt
      [X] Base Textur anzeigen
        [X] Farbe anhand UV herholen (ceil/floor könnte sehr praktisch sein)
          [X] für u/v werte außerhalb von intervall [0, 1] wählen können zwischen
            [X] Transparent
            [X] Textur wiederholt
            [X] CLAMPed
      [X] BaseTexture mit Wolken
      [X] RingTextur
      [X] Filtering überarbeiten
        [X] Mit geeigneten Texturen Testen
  [ ] OpenGL Vorschau
    [X] Deprecated sachen entfernen
    [X] gucken, ob Ring noch tut (breite, durchmesser...)
    [X] Lichtrepräsentation
      [X] ausschalten können
      [X] direct light mesh anzeigen
    [X] alle Gradiente in eine 2D Textur
    [X] Nachtseite sollte ganz weg sein, wenn von einer Nachtbeeinflussenden Seite ganz beleuchtet
    [X] Für Gradiente feste sampleZahl festlegen/Alpha zuweisen können
      [X] in GUI verstecken
    [ ] Uniform Buffer?
    [X] gradientenstand mit mehreren Lichtern testen
    [ ] weitere Gradients einsetzen
      [X] getrennte & gemeinsame kurven für Ring & Planetbeleuchtung
        [X] flexibler machen (nicht mehr per multiplikation, sondern eher wie graditionskurve)
      [X] Kurve für übergang von Nachttextur
        [X] wahlweise custom oder direkt vom diffusen Licht abhängig
      [X] Gradient für Farbe/Transparenz von Wolken in abhängigkeit der beleuchtung
      [X] Graditionskurven für einzelne Texturen
        [X] Alpha verstecken können
        [X] reset button
    [X] RingShader
      [X] directionallight
      [X] pointlight
      [X] customlight
      [X] durchleuchtet
    [ ] Glanzlichter
      [ ] Planet
        [ ] Weighttextur
          [ ] Textur mit vier Kanälen (alpha invertiert?), wobie jede der vier Texturen für ein eigenes Material steht
            z.B Rot: Wüsten, Grün: ka, schwarz: kein glanzlicht, Blau: Eis, Alpha-Invertiert: Wasser
      [ ] Glanzlichter für Ring?
    [ ] Atmosphären effekt
      [ ] Farbverlauf soll Material beeinflussen
      [ ] Entfernung, mit der der Strahl an der Kugel vorbeifliegt bestimmen können
      [ ] Atmosphäre soll auch Ringe beeinflussen?
    [ ] Normalmap?
      [ ] Normalmap für Wolken autmatisch generieren
      [ ] Height/Normalmap für Planeten angeben können
    [ ] Schatten
      [ ] manuell linear zwischen directlightshadow und pointlightshadow schalten können
      [ ] schatten auf Ring
        [ ] schatten vom Planeten (just shadow umsetzung im Auge behalten)
      [ ] schatten auf Planeten
        [ ] schatten vom Ring (just shadow umsetzung im Auge behalten)
        [ ] schatten von Wolken (just shadow umsetzung im Auge behalten)
          [ ] mithilfen von Matrix von der Lichtquelle aus?
            [ ] Matrix, die linear zwischen othogonal und projeziet umschalten können
      [ ] just shadow umsetzen
    [ ] Antialiasing
    [ ] gucken pb Multimapping nicht etasa schärfer geht
    [ ] Graditionsbeleuchtung
      [ ] Refenrenztextur für Kreisfarbverlauf (nur ein Viertel, andere sollen über shader einfach über abs bestimmt werden)
      [ ] normalmap als offset in bildschirmkoordinaten für fabe interpretieren?
    [ ] anisotropes filtering?
    [ ] Comarerotation und planet (ohne Lichtquellen) seperat rotieren können
  [ ] Raytracer auf stand der echtzeitansicht bringen
    [ ] möglichkeit zum "backen" nicht verbauen!
  [ ] Viewport zum raytracen
  [ ] schauaen, ob wirklich alles abgespeichert wird
  [ ] Datei (inklusive kameraansicht) speichern und laden können
    [ ] Planetendaten in Datei speichern können
      [ ] relative Pfadangaben
        [ ] Gio::File::get_relative_path
    [ ] Planetendaten aus Datei laden können
      [ ] relative Pfadangaben
        [ ] Gio::File::resolve_relative_path
    [ ] "Zulezt geöffnet" Liste
    [ ] "default" wie bei Gimp
  [ ] Raytracer
    [ ] gucken, ob antialiasing wirklich funzt (auch bei 2x und 4x?)
    [ ] gucken, ob alles bei sehr kleinen Bildern funzt
      [ ] artefakte?
      [ ] ein Tile sollte nicht weniger als 8x8 px repräsentieren
    [ ] ungültige Parameter gültig machen (z.B. wo speichern, und ob überschrieben)
  [ ] Bild automatisch neuladen, wenn auf Festplatte geändert
  [ ] zusätzliche Features
    [X] SVG autom erstellen, die zeigt, welcher Bereich beim "warpen" verwendet wird
      [ ] message box die fragt, ob man überschreiben will
    [ ] "gutes" uv warping
  [ ] Planeten "backen" können

[ ] Programm
  [X] richtigen Pfade herausfinden (see apply_filename_macros)
    [ ] Temp Ordner beim beenden löschen?
  [ ] UI
    [X] share/themes/dark-theme löschen
    [ ] Framework
      [X] Debug Widget Allocation sollte von den Widgets selbst gezeichnet werden
      [X] WindowManager sollte nicht mehr singleton sein
      [X] Themes sollten von den Window Managern zugewiesen werden
      [ ] Engine nicht mehr singleton und dem WIndowManager zugewiesen
      [ ] Engine soll bei den von ihn erstellten Ressourcen mitzählen (warum nommal?)
      [ ] Fonts
        [ ] Ein neues Font objekt auf Basis eines alten erstellen können
          [ ] mit zusätzlichen effekten
            [ ] Schatten/Leuchten
            [ ] Small Capitals
          [ ] Farbe ändern können
          [ ] wenn erste schriftart sich ändert, sollen abgeleitete schriftarten sich auch ändern
    [ ] Menü
      [ ] Muster honzufügen, anstatt einfarbigem 3333
      [ ] Back
        [ ] Bei Auflösungswechsel nach 2 sekunden sanft von der schlechten zur guten Auflösung wechseln
